% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/find_best_column_match.R
\name{find_best_column_match}
\alias{find_best_column_match}
\title{Find the Best Approximate Column Name Match}
\usage{
find_best_column_match(input_str, candidate_names)
}
\arguments{
\item{input_str}{A character string to be matched against the candidate names.}

\item{candidate_names}{A character vector of possible column names to match against.}
}
\value{
A single character string representing the best matching candidate name.
If multiple equally good matches are found, the function throws an error indicating ambiguity.
If no match is found, the function stops with an error message.
}
\description{
This function searches for the closest approximate match to a given input string
within a vector of candidate column names. It is useful for handling non-standard
evaluation errors, such as quosure issues, by performing a case-insensitive and
edit-distance-based comparison.
}
\details{
The function first filters candidate names using \code{agrep()} to find approximate matches.
It then computes string edit distances using \code{adist()} to select the closest match.
In the event of a tie for the best match, an error is raised to prevent ambiguous resolution.
}
\examples{
find_best_column_match("nmae", c("name", "age", "gender"))
# Returns "name"

find_best_column_match("id", c("name", "age", "gender"))
# Error: No close match found for 'id'.

}
