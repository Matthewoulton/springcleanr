% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/column_validation.R
\name{column_validation}
\alias{column_validation}
\title{Validate Variable Presence, Type, and Variation in a Dataset}
\usage{
column_validation(
  data,
  variables,
  outcome_list = NULL,
  hardstop = FALSE,
  variable_type = "numeric",
  check_constant = TRUE,
  NA_count = FALSE
)
}
\arguments{
\item{data}{A data frame to validate.}

\item{variables}{A character vector of column names to check.}

\item{outcome_list}{Optional. A vector of valid values. If provided, the function checks that all non-NA values
in the variables are included in this list. Only applied if \code{variable_type} is not \code{FALSE}.}

\item{hardstop}{Logical. If \code{TRUE}, the function collects all failing checks and throws a single error.
If \code{FALSE} (default), warnings are issued for each problem but the function does not stop execution.}

\item{variable_type}{Either \code{"numeric"}, \code{"string"}, or \code{FALSE}; or a character vector of these types with one per variable.
If \code{"numeric"} or \code{"string"}, the function checks that each column has the corresponding type.
If \code{FALSE}, skips type checking. If a vector is supplied, it must match the length of \code{variables}.}

\item{check_constant}{Logical. If \code{TRUE} (default), the function checks whether each variable has only a single unique
non-NA value and flags it as constant. Set to \code{FALSE} to skip this check.}
}
\value{
Invisibly returns \code{NULL}, but throws an error or warning if any checks fail.
}
\description{
Checks that specified variables are present in a data frame, match expected types, contain non-missing and varying values,
and (optionally) only include values from a predefined list. You can choose whether to \code{stop()} on failures
or issue warnings instead. All checks are run, and a summary of issues is returned.
}
\details{
The function performs the following checks on each variable:
\itemize{
\item Presence in the dataset.
\item If \code{variable_type} is not \code{FALSE}, the column must match the expected type.
\item It must contain at least one non-\code{NA} value.
\item (Optional) It must not be constant if \code{check_constant = TRUE}.
\item If \code{outcome_list} is provided, all non-\code{NA} values must be included in that list (only when \code{variable_type} is not \code{FALSE}).
}

When \code{hardstop = TRUE}, any issues are collected and reported together in a single error message.
When \code{hardstop = FALSE}, issues are issued as warnings.
}
\examples{
df <- data.frame(score = c(1, 2, 2, NA), category = c("A", "A", "A", "A"))
column_validation(df, variables = c("score", "category"), variable_type = "numeric")
column_validation(df, variables = c("category"), variable_type = "string", outcome_list = c("A", "B"))

# Skip constant check:
column_validation(df, variables = "category", variable_type = "string", check_constant = FALSE)

# Mixed type validation:
df2 <- data.frame(ID = 1:3, Name = c("Alice", "Bob", "Charlie"))
column_validation(df2, variables = c("ID", "Name"), variable_type = c("numeric", "string"))

}
